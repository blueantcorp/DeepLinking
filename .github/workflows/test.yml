name: Test
on: [push, pull_request]

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      # Ruby
      - name: Set up Ruby latest
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 'head'
      - name: Install dependencies
        run: |
            bundle install \
                --without=documentation \
                --jobs 4 \
                --retry 3

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: get_branch
        
      # Swift
      - name: Run tests and collect coverage
        run: |
            swift test \
                --enable-code-coverage \
                | xcpretty

      # Cargo
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: |
            cargo llvm-cov \
                --all-features \
                --workspace \
                --lcov \
                --output-path lcov.info

      # Slather
      - run: bundle exec slather
        env:
          GIT_BRANCH: ${{ steps.get_branch.outputs.branch }}
          CI_PULL_REQUEST: ${{ github.event.number }}
          COVERAGE_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      # Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      # - name: Danger
      #   run: bundle exec danger
      #   env:
      #     DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - uses: actions/upload-artifact@v2
#        if: ${{ always() }}
#        with:
#          name: ResultBundle
#          path: ./coverage/*.xcresult
#          if-no-files-found: warn
#          retention-days: 5
#
#      - name: Clean up
#        if: ${{ always() }}
#        run: make cleanup
