name: CI
on: [pull_request]

env:
  DEVELOPER_DIR: /Applications/Xcode_14.1.app/Contents/Developer
  FASTLANE_SKIP_UPDATE_CHECK: true
  FASTLANE_XCODE_LIST_TIMEOUT: 60
  FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 60
  HOMEBREW_NO_INSTALL_CLEANUP: TRUE
  BUNDLE_PATH: vendor/bundle

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: YamlLint
        run: yamllint --strict --format github .
      - name: RuboCop
        run: bundle exec rubocop --format github
      - name: SwiftLint
        run: |
          docker run --rm -v `pwd`:`pwd` -w `pwd` \
            ghcr.io/realm/swiftlint:0.49.1 \
            swiftlint lint \
              --fix \
              --format \
              --config .swiftlint.yml \
              --reporter github-actions-logging
      - name: SwiftFormat
        run: |
          docker run --rm -v `pwd`:`pwd` -w `pwd` \
            ghcr.io/nicklockwood/swiftformat:0.50.3 \
            --config .swiftformat .

      # Build and test the package
      - name: Build Package
        run: swift build -v
      - name: Test Package
        run: |
          swift test \
            --enable-test-discovery \
            --enable-code-coverage

      # Run Slather
      - name: Run Slather
        run: echo $PWD && ls -l && bundle exec slather
        continue-on-error: true

      # Danger integration
      - name: Run Danger
        run: bundle exec danger
        env:
          GITHUB_TOKEN: ${{ github.token }}
          DANGER_GITHUB_API_TOKEN: ${{ github.token }}
          DANGER_GITHUB_BEARER_TOKEN: ${{ github.token }}


      # Codecov integration
      - uses: mattpolzin/swift-codecov-action@0.7.5
        with:
          MINIMUM_COVERAGE: 90
          INCLUDE_TESTS: "true"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      # SonarCloud integration
      - uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
