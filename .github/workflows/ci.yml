name: CI
on: [push, pull_request]

jobs:
  lint:
    if: ${{ false }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: GitHub Action for SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1

  danger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1.138.0
        with:
          bundler-cache: true
      - uses: MeilCli/danger-action@v5
        with:
          danger_id: 'danger-pr'
          danger_file: 'Dangerfile'

  build:
    needs: [danger]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Package
        run: swift build -v

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test Package
        run: |
          swift test \
            --enable-test-discovery \
            --enable-code-coverage

  analyze:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  slather:
    if: ${{ false }}
    needs: [analyze]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1.138.0
        with:
          ruby-version: 3.0
          bundler-cache: true
      - run: bundle exec slather

  codecov:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mattpolzin/swift-codecov-action@0.7.5
        with:
          MINIMUM_COVERAGE: 90
          INCLUDE_TESTS: "true"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  format:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mtgto/swift-format-action@main
        with:
          configuration_file: .swift-format
          all_files: false
          auto_correct: true
          max_warnings: -1

  docs:
    needs: [format]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  release:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  publish:
    if: ${{ false }}
    name: Publish on GitHub
    needs: [danger]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  sonarcloud:
    needs: [publish]
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}