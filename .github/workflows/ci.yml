name: CI
on: [push, pull_request]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: GitHub Action for SwiftLint
        uses: norio-nomura/action-swiftlint@3.2.1

  danger:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  analyze:
    needs: [danger]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        
  build:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build Package
        run: swift build -v
        
  test:
    needs: [danger,lint]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test Package
        run: |
          swift test \
            --enable-test-discovery \
            --enable-code-coverage

  slather:
    if: ${{ false }}
    needs: [analyze,test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up ruby env
        uses: ruby/setup-ruby@v1.138.0
        with:
          ruby-version: 3.0
          bundler-cache: true
      - run: bundle exec slather
      
  codecov:
    needs: [slather]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mattpolzin/swift-codecov-action@0.7.5
        with:
          MINIMUM_COVERAGE: 90
          INCLUDE_TESTS: 'true'
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

  format:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: mtgto/swift-format-action@main
        with:
          configuration_file: .swift-format
          all_files: false
          auto_correct: true
          max_warnings: -1

  docs:
    needs: [format]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  combine:
    needs: [codecov,docs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

  publish:
    needs: [release]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

#  Danger:
#    - name: Danger
#      run: echo 'Danger'
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v2
#
#      # Ruby
#      - name: Set up Ruby latest
#        uses: ruby/setup-ruby@v1
#        with:
#          ruby-version: 'head'
#      - name: Install dependencies
#        run: |
#            bundle install \
#                --without=documentation \
#                --jobs 4 \
#                --retry 3

      # Slather
#      - run: bundle exec slather
#        env:
#          GIT_BRANCH: ${{ steps.get_branch.outputs.branch }}
#          CI_PULL_REQUEST: ${{ github.event.number }}
#          COVERAGE_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Danger
      #   run: bundle exec danger
      #   env:
      #     DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - uses: actions/upload-artifact@v2
#        if: ${{ always() }}
#        with:
#          name: ResultBundle
#          path: ./coverage/*.xcresult
#          if-no-files-found: warn
#          retention-days: 5
#
#      - name: Clean up
#        if: ${{ always() }}
#        run: make cleanup